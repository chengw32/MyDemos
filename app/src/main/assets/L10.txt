
PathMeasure 测量 path 的工具

 getSegment 截取 path 的一段。getPosTan 获取某一点的切线角度。 setPath(path,forceClosed)第二个参数会影响到 getLength（）。指是否算闭合还是不闭合的长度

------mPath.rQuadTo 与 quadTo 的区别：---------

quadTo 是已知起点坐标，控制点的坐标，终点的坐标 然后画出贝塞尔曲线， 

rQuadTo 是已知起点坐标，从起点开始，然后设置好控制点的 △x，△y  轴的偏移量，在确定终点的 △x，△y 轴的偏移量

执行 rQuadTo 后又执行 rQuadTo 则后面的 rQradTo 的坐标是在前面的 rQuadTo 的坐标移动的基础上在移动。水波纹的两个波就是执行2次 rQuadTo 画出来的

-------画水波纹效果------------------

原理：画二阶贝塞尔曲线
 起点不断的向右移动，利用 rQuadTo 实现波浪效果。

注意点： 起点要在屏幕左边一个波长，然后起点不断的右移动。 当右移动一个波长后起点又还原回屏幕右边一个波长

-------将一个图片画在某个曲线的切线方向。--------

实现方式
1、利用系统 api 获取矩阵 将图片画到矩阵。

pathMeasure.getMatrix(mDeltaX, matrix, PathMeasure.POSITION_MATRIX_FLAG | PathMeasure.TANGENT_MATRIX_FLAG);
第一个参数是path的起始点到该点的长度。
第二个参数是一个矩阵对象，pathMeasure 获取到的矩阵赋值给这个对象。
第三个参数是配置该矩阵的属性。
PathMeasure.POSITION_MATRIX_FLAG（position） | PathMeasure.TANGENT_MATRIX_FLAG（tangent） 矩阵就会沿着切线角度。 如果不传 PathMeasure.TANGENT_MATRIX_FLAG 矩阵是竖直方向的没有沿切线方向。 矩阵的左上角在曲线切点 类似 建设银行的轮盘图标始终竖直方向

matrix.preTranslate(- bm.getWidth()/2 ,-bm.getHeight() / 2);这个api是对矩阵进行平移调整位置

canvas.drawBitmap(bm,matrix,null);将图画在矩阵里矩阵大小由图片大小决定

2、手动计算切线角度 设值给矩阵

*1 获取某点的 坐标 跟 tan 值。

pathMeasure.getPosTan(mDeltaX, pos, tan);第一个参数是这个点所在 path 的长度，第二个参数是该点所在位置，第三个参数是该点 tangent 对应的 x，y比例。 调用这个方法的时候会把获取到的 pos 跟 tan 赋值到第二第三个参数的对象

*2 将矩阵旋转 tan 数组里面的角度。

float degree = (float) (Math.atan2(tan[1],tan[0]) * 180f / Math.PI);//atan2 的传值顺序不能错
matrix.postRotate(degree,bm.getWidth() / 2,bm.getHeight() / 2 );

*3 将矩阵平移到 pos 里面的坐标值 做适当的调整

matrix.postTranslate(pos[0]-bm.getWidth() / 2,pos[1]-bm.getHeight() / 2 );

*4 画 bitmap 

canvas.drawBitmap(bm,matrix,paint);

------------注意点-------------------
1、矩阵要记得 reset  path 也是要注意 reset。
2、setRotate 跟 postRotate 的区别 postTranslate 跟 setTranslate 的区别。setXXX 效果是不能叠加的 比如执行了 setRotate 又执行 setTranslate 则只有 setTranslate 效果。而 post 效果可以叠加。如果先调用setXXX 在调用 postXXX 则效果可以叠加


