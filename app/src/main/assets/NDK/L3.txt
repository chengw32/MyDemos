
----- 知识点 -----

1、函数指针。
void main(){
	int result;
	//定义一个函数指针变量（method）（跟变量指针的区别是同时定义了参数的）
	int(*method)(int a,int b);
	//将需要调用的函数名赋值给 函数指针的变量（method）
	method = plus;
	//调用定义好的函数指针
	result = method(5, 6);
	printf("结果-- %d\n", result);
	sysPause();
}
自己定义的一个函数（例如 plus）其函数名就是内存首地址，所以可以把它赋值给对应类型的函数指针变量（method = plus;）

定义函数指针的一个技巧：void 类型指针。
void main(){
	int result;
	char *a = "5";
	char *b = "6";
	//定义一个函数指针
	int(*method)(void *a, void *b);
	//将 需要调用的函数名赋值给 函数指针的变量（method）(void赋值给int类型 需要强制类型转换)
	method = (int(*)(void *, void *))plus;
	//调用函数
	result = method(a, b);
	printf("结果-- %d\n", result);
	sysPause();
}

void 类型类似 java 的object类型。

原理：指针变量都是四个字节，都是十六进制表示的。无论是 int/char/float 类型的指针，只要是指针都是占四个字节。所以从 void 类型的指针强转到 int/char/flot类型只不过是类型不同。类型不同影响到的就是从内存地址中取值不同 int 是4个字节取值，char是一个字节取值。

下面的两个表达式完全不同
  int（*method）（void *，void *）函数指针
  int * method（int a，int b）返回一个 int* 类型的值 的函数

2、内存分配
内存分为三个区
  程序区
  静态存储区
  动态存储区

程序区
 存储程序二进制文件

静态存储区
 全局变量和静态变量

 C语言里面 大于0的都是true 比如if（1）

动态存储区
 堆区： 程序自动分配
 栈区：编译器自动分配，编译器自动申请和释放 一般是 2M

关键字 malloc
  堆区动态申请内存：int *a = (int *)malloc(申请的大小);
  如果 malloc 申请失败 则指针为空 所以申请完之后要做个判空。
  申请完后记得初始化每个变量，不然会出错？
  使用完了还要释放： free（a）

关于 free（a） 
  不能重复调用。
  free 完后要给 指针赋值 NULL .如果不赋值 NULL 那么指针就是个野指针。

结论
  calloc 跟 free 是成对出现的。（申请了2次内存 而调用了一次free 则前一次内存没有被释放 因为指针已经指向后面申请的空间了）

关于内存地址 +1 
  int *t ; t = t+1 ;效果是内存地址加了四个字节。如果是char类型的 则地址加一个字节。

关键字 calloc
void * caloc（count，size）
申请 count 个大小为 size 的连续内存空间。 并且跟 malloc 不一样的是 calloc 的申请的全部空间会初始化为0 。
申请失败了 返回的指针为空 。所以也要做空判断。

3、字符串
C语言表示字符串：char 类型的指针、char类型的数组。
输出一个字符串 ：用占位符 s 。 s 作用是会读取连续的内存的值直到出现空格（\0）标记。

用数组表示一个字符串
1、定好数组长度的数组
char t[10] = {'a','b','c'};(只能用单引号，双引号表示的是一个字符串)
2、没定好数组长度的数组
char t[] = {'a','b','c'};（括号里没数字，输出结果是abc后面还有乱码）防止后面输入乱码在c后面再添加‘\0’ 表示空格。
3、数组直接赋值字符串
char t[10] = "abc" ;
4、常量数组不可修改，但是可以修改数组里面某个内存的值
char t[] = { 'a', 'b', 'c' ,'\0'};
t[0] ='s';
t = xx ; 这里编译不过 会提示 不可修改的左值。

用指针表示一个字符串
char *t = "abc";
双引号的字符串 C语言里 就是表示一个常量 放在常量区。常量是不可改变的。

字符串操作api
strcat（char 类型的 指针/字符串数组，char 类型的 指针/字符串数组） 拼接
strcpy （char 类型的 指针/字符串数组，char 类型的 指针/字符串数组）复制左右相当于替换字符串。


